name: Build Image

on: [push, pull_request, workflow_dispatch]

env:
  ENDPOINT: "fusetim/external_natpmp_qbittorrent"
  BRANCH: "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
              
      - name: Credential check
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.ENDPOINT != 'user/endpoint' }}
        run: |
          echo "CR_USER=${{ secrets.CR_USER }}" >> $GITHUB_ENV
          echo "CR_PAT=${{ secrets.CR_PAT }}" >> $GITHUB_ENV
          echo "DOCKERUSER=${{ secrets.DOCKERUSER }}" >> $GITHUB_ENV
          echo "DOCKERPASS=${{ secrets.DOCKERPASS }}" >> $GITHUB_ENV
          if [[ "${{ secrets.CR_USER }}" == "" && "${{ secrets.CR_PAT }}" == "" && "${{ secrets.DOCKERUSER }}" == "" && "${{ secrets.DOCKERPASS }}" == "" ]]; then
            echo "::error::Push credential secrets missing."
            echo "::error::You must set either CR_USER & CR_PAT or DOCKERUSER & DOCKERPASS as secrets in your repo settings."
            echo "::error::See https://github.com/linuxserver/docker-mods/blob/master/README.md for more information/instructions."
            exit 1
          fi

      - name: Login to GitHub Container Registry
        if: ${{ github.ref == format('refs/heads/{0}', env.BRANCH) && env.CR_USER && env.CR_PAT && env.ENDPOINT != 'user/endpoint' }}
        run: |
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ secrets.CR_USER }} --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: ghcr.io/${{ ENDPOINT }}:${{ github.sha }}

